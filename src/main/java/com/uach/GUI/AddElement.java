/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.uach.GUI;

import com.uach.xmlmanager.JDom;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import org.jdom2.Content;
import org.jdom2.filter.Filters;

/**
 *
 * @author edgar
 */
public class AddElement extends javax.swing.JFrame {

    /**
     * Creates new form AddElement
     */
    JDom p = new JDom();
    public List<Content> elements = new ArrayList<Content>();
    public Integer cmbIndex;

    public Integer i = 0;

    public List<Content> getElements() {
        return elements;
    }

    public void setElements(List<Content> elements) {
        this.elements = elements;
    }

    public AddElement(List<Content> elements) {
        initComponents();
        setElements(elements);
        if (!getElements().isEmpty()) {
            getElements().forEach((element) -> {
                cmbElementoPadre.addItem(element.toString() + " " + i);
                i++;
            });
        }
        this.setLocationRelativeTo(null);
    }

    public AddElement() {
        initComponents();
        cmbElementoPadre.setEnabled(false);
        txtContent.setEnabled(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombre = new javax.swing.JLabel();
        cmbElementoPadre = new javax.swing.JComboBox<>();
        lblPadre = new javax.swing.JLabel();
        txtTag = new javax.swing.JTextField();
        bntOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtContent = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        lblNombre.setText("Nombre del elemento");

        cmbElementoPadre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Seleccionar-" }));
        cmbElementoPadre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbElementoPadreItemStateChanged(evt);
            }
        });

        lblPadre.setText("Padre");

        txtTag.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTagKeyPressed(evt);
            }
        });

        bntOk.setText("Aceptar");
        bntOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntOkActionPerformed(evt);
            }
        });

        jLabel1.setText("Contenido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(lblNombre)
                    .addComponent(lblPadre)
                    .addComponent(bntOk, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTag, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(txtContent)
                    .addComponent(cmbElementoPadre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNombre)
                .addGap(18, 18, 18)
                .addComponent(txtTag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPadre)
                .addGap(18, 18, 18)
                .addComponent(cmbElementoPadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(bntOk)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntOkActionPerformed
        if (txtTag.getText().equals("")) {
            JOptionPane.showMessageDialog(txtTag, "El campo nombre es obligatorio");
        } else {
            if (p.getDocXML().hasRootElement()) {
                cmbIndex = cmbElementoPadre.getSelectedIndex();
                if (cmbIndex <= 0) {
                    p.setNodoHijo(p.crearNodo(txtTag.getText(), txtContent.getText()));
                    p.getRaiz().addContent(p.getNodoHijo());
                } else {
                    p.setNodoPadre(p.getNode(p.getDocXML()
                            .getDescendants(Filters.element()), cmbIndex - 1));
                    p.setNodoHijo(p.crearNodo(txtTag.getText(), txtContent.getText()));
                    p.getNodoPadre().addContent(p.getNodoHijo());
                }
            } else {
                p.setRaiz(p.crearNodo(txtTag.getText()));
                p.getDocXML().addContent(p.getRaiz());
            }
            this.dispose();
        }
    }//GEN-LAST:event_bntOkActionPerformed

    private void cmbElementoPadreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbElementoPadreItemStateChanged
        cmbIndex = (cmbElementoPadre.getSelectedIndex());
        System.out.println("seleccionado: " + cmbIndex);
    }//GEN-LAST:event_cmbElementoPadreItemStateChanged

    private void txtTagKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTagKeyPressed
        int key = evt.getKeyCode();
        if (key == evt.VK_ENTER) {
            bntOk.doClick();
        }
    }//GEN-LAST:event_txtTagKeyPressed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntOk;
    private javax.swing.JComboBox<String> cmbElementoPadre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPadre;
    private javax.swing.JTextField txtContent;
    private javax.swing.JTextField txtTag;
    // End of variables declaration//GEN-END:variables
}
